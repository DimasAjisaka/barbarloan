/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package barbarloan.layout;

import barbarloan.connection.ConnectionDB;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Valdi
 */
public class User extends javax.swing.JInternalFrame {

    /**
     * Creates new form User
     */
    public User() {
        initComponents();
        
        this.showTable(userTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        LName = new javax.swing.JLabel();
        LName1 = new javax.swing.JLabel();
        LName2 = new javax.swing.JLabel();
        tvName = new javax.swing.JLabel();
        tvPhone = new javax.swing.JLabel();
        tvAddress = new javax.swing.JLabel();
        etUsername = new javax.swing.JTextField();
        etName = new javax.swing.JTextField();
        etPhone = new javax.swing.JTextField();
        etPassword = new javax.swing.JTextField();
        etAddress = new javax.swing.JTextField();
        etRole = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        submitBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();

        setClosable(true);
        setTitle("Data User");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        LName.setFont(new java.awt.Font("Product Sans", 1, 14)); // NOI18N
        LName.setText("Username");

        LName1.setFont(new java.awt.Font("Product Sans", 1, 14)); // NOI18N
        LName1.setText("Password");

        LName2.setFont(new java.awt.Font("Product Sans", 1, 14)); // NOI18N
        LName2.setText("Role");

        tvName.setFont(new java.awt.Font("Product Sans", 1, 14)); // NOI18N
        tvName.setText("Name");

        tvPhone.setFont(new java.awt.Font("Product Sans", 1, 14)); // NOI18N
        tvPhone.setText("Phone");

        tvAddress.setFont(new java.awt.Font("Product Sans", 1, 14)); // NOI18N
        tvAddress.setText("Address");

        etUsername.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N

        etName.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N

        etPhone.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N

        etPassword.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N

        etAddress.setFont(new java.awt.Font("Product Sans", 0, 12)); // NOI18N

        etRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Employee" }));

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Password", "Role Id", "Name", "Phone", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        submitBtn.setBackground(new java.awt.Color(33, 150, 243));
        submitBtn.setFont(new java.awt.Font("Product Sans", 1, 12)); // NOI18N
        submitBtn.setForeground(java.awt.Color.white);
        submitBtn.setText("Save");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        editBtn.setBackground(new java.awt.Color(33, 150, 243));
        editBtn.setFont(new java.awt.Font("Product Sans", 1, 12)); // NOI18N
        editBtn.setForeground(java.awt.Color.white);
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(33, 150, 243));
        deleteBtn.setFont(new java.awt.Font("Product Sans", 1, 12)); // NOI18N
        deleteBtn.setForeground(java.awt.Color.white);
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(220, 220, 220));
        clearBtn.setFont(new java.awt.Font("Product Sans", 1, 12)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(33, 150, 243));
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LName)
                            .addComponent(LName1)
                            .addComponent(LName2)
                            .addComponent(tvName)
                            .addComponent(tvPhone)
                            .addComponent(tvAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(etPhone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(etName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etRole, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etUsername, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etAddress)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(submitBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LName)
                            .addComponent(etUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LName1)
                            .addComponent(etPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LName2)
                            .addComponent(etRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tvName)
                            .addComponent(etName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tvPhone)
                            .addComponent(etPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tvAddress)
                            .addComponent(etAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submitBtn)
                            .addComponent(editBtn)
                            .addComponent(deleteBtn)
                            .addComponent(clearBtn))))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        String username = etUsername.getText();
        String password = etPassword.getText();
        int roleIndex = etRole.getSelectedIndex() + 1;
        String name = etName.getText();
        String phone = etPhone.getText();
        String address = etAddress.getText();
        
        if (username.isEmpty() || password.isEmpty() || Integer.toString(roleIndex).equals("0") || name.isEmpty() || phone.isEmpty() || address.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Fill The Data!");
            return;
        }
        
        try {
            Connection conn = ConnectionDB.conn();
            String userAddSqlQuery = "insert into user values(null, '" + username + "','" + password + "'," + roleIndex + ")";
            PreparedStatement preparedUserStatement = conn.prepareStatement(userAddSqlQuery);
            preparedUserStatement.execute();
            
            Statement statement = conn.createStatement();
            
            String getUserInfoQuery = "select * from user where username = '" + username +"' and password = '" + password + "' and role_id = "+ roleIndex;
            ResultSet userInfoResultSet = statement.executeQuery(getUserInfoQuery);
            
            int i = 1;
            
            int user_id = 0;
            
            while (userInfoResultSet.next()) {
                if (i == 1) {                    
                    user_id = userInfoResultSet.getInt(1);
                    break;
                }
            }
            
            String detailUserAddSqlQuery = "insert into detail_user values(null,"
                + user_id + ","
                + "'" + name + "',"
                + "'" + phone + "',"
                + "'" + address + "')";
                
            PreparedStatement preparedDetailUserAddStatement = conn.prepareStatement(detailUserAddSqlQuery);
            preparedDetailUserAddStatement.execute();
            
            
            JOptionPane.showMessageDialog(null, "Data Added!");
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Add Data Failed!");
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        
        showTable(userTable);
    }//GEN-LAST:event_submitBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        String username = etUsername.getText();
        String password = etPassword.getText();
        int roleIndex = etRole.getSelectedIndex() + 1;
        String name = etName.getText();
        String phone = etPhone.getText();
        String address = etAddress.getText();
        
        if (username.isEmpty() || password.isEmpty() || Integer.toString(roleIndex).equals("0") || name.isEmpty() || phone.isEmpty() || address.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Fill The Data!");
            return;
        } else if (this.ID == 0) {
            JOptionPane.showMessageDialog(null, "Select Data You Want To Edit!");
            return;
        }
        
        try {
            Connection conn = ConnectionDB.conn();
            String updateUserSqlQuery = "update user set "
                    + "username ='" + username + "', "
                    + "password = '" + password + "', "
                    + "role_id = " + roleIndex + " where id = " + this.ID + ";";
            
            PreparedStatement preparedUpdateUserStatement = conn.prepareStatement(updateUserSqlQuery);
            preparedUpdateUserStatement.execute();
            
            String updateDetailUserSqlQuery = "update detail_user set "
                    + "user_id = " + this.ID + ", "
                    + "name = '" + name + "', "
                    + "phone = '" + phone + "',"
                    + "address = '" + address + "' where user_id = " + this.ID;
            PreparedStatement preparedUpdateDetailUserStatement = conn.prepareStatement(updateDetailUserSqlQuery);
            preparedUpdateDetailUserStatement.execute();
            
            JOptionPane.showMessageDialog(null, "Data Edited!");
            
            clearInput();
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Edit Data Failed!");
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        
        showTable(userTable);
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        if (this.ID == 0) {
            JOptionPane.showMessageDialog(null, "Select Data You Want To Delete!");
            return;
        }
        
        try {
            Connection conn = ConnectionDB.conn();
            String deleteUserSqlQuery = "delete from user where id = " + this.ID;
            PreparedStatement preparedDeleteUserStatement = conn.prepareStatement(deleteUserSqlQuery);
            preparedDeleteUserStatement.execute();
            
            String deleteDetailUserSqlQuery = "delete from detail_user where user_id = " + this.ID;
            PreparedStatement preparedDeleteDetailUserStatement = conn.prepareStatement(deleteDetailUserSqlQuery);
            preparedDeleteDetailUserStatement.execute();
            
            JOptionPane.showMessageDialog(null, "Data Deleted!");    
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Delete Data Failed!");
            JOptionPane.showMessageDialog(null, ex.toString());
        }
        
        clearInput();
        showTable(userTable);
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearInput();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        int row = userTable.rowAtPoint(evt.getPoint());
        
        String username = userTable.getValueAt(row, 1).toString();
        String password = userTable.getValueAt(row, 2).toString();
        int roleIndex = Integer.parseInt(userTable.getValueAt(row, 3).toString());
        String name =  userTable.getValueAt(row, 4).toString();
        String phone = userTable.getValueAt(row, 5).toString();
        String address = userTable.getValueAt(row, 6).toString();
        
        this.ID = Integer.parseInt(userTable.getValueAt(row, 0).toString());
        
        etUsername.setText(username);
        etPassword.setText(password);
        etRole.setSelectedIndex(roleIndex - 1);
        etName.setText(name);
        etPhone.setText(phone);
        etAddress.setText(address);
    }//GEN-LAST:event_userTableMouseClicked

    private void clearInput() {
        etUsername.setText("");
        etPassword.setText("");
        etRole.setSelectedIndex(0);
        etName.setText("");
        etPhone.setText("");
        etAddress.setText("");
        
        this.ID = 0;
    }
    
    private void showTable(JTable table) {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("ID");
        tableModel.addColumn("Username");
        tableModel.addColumn("Password");
        tableModel.addColumn("Role Id");
        tableModel.addColumn("Name");
        tableModel.addColumn("Phone");
        tableModel.addColumn("Address");

        try {
            Connection conn = ConnectionDB.conn();
            String userSqlQuery = "SELECT a.*, b.* FROM `user` as a INNER JOIN detail_user as b on a.id = b.user_id";
            Statement statement = conn.createStatement();
            ResultSet userResultSet = statement.executeQuery(userSqlQuery);
            
            while (userResultSet.next()) {
                tableModel.addRow(new Object[]{
                    userResultSet.getString(1),
                    userResultSet.getString(2),
                    userResultSet.getString(3),
                    userResultSet.getString(4),
                    userResultSet.getString(7),
                    userResultSet.getString(8),
                    userResultSet.getString(9)
                });
            }

            table.setModel(tableModel);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Show Table Failed");
            JOptionPane.showMessageDialog(null, e.toString());
        }

//        employees.removeColumn(employees.getColumnModel().getColumn(4));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LName;
    private javax.swing.JLabel LName1;
    private javax.swing.JLabel LName2;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField etAddress;
    private javax.swing.JTextField etName;
    private javax.swing.JTextField etPassword;
    private javax.swing.JTextField etPhone;
    private javax.swing.JComboBox<String> etRole;
    private javax.swing.JTextField etUsername;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel tvAddress;
    private javax.swing.JLabel tvName;
    private javax.swing.JLabel tvPhone;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
    
    private int ID = 0;
}
